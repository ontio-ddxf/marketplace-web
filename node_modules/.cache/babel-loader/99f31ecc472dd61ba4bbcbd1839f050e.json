{"remainingRequest":"/Users/ericyang/Desktop/Onchina_item/marketplace-web/node_modules/babel-loader/lib/index.js!/Users/ericyang/Desktop/Onchina_item/marketplace-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/ericyang/Desktop/Onchina_item/marketplace-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ericyang/Desktop/Onchina_item/marketplace-web/src/components/Buyer.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ericyang/Desktop/Onchina_item/marketplace-web/src/components/Buyer.vue","mtime":1557385882058},{"path":"/Users/ericyang/Desktop/Onchina_item/marketplace-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ericyang/Desktop/Onchina_item/marketplace-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/ericyang/Desktop/Onchina_item/marketplace-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ericyang/Desktop/Onchina_item/marketplace-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/ericyang/Desktop/Onchina_item/marketplace-web/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { client } from 'ontology-dapi';\nexport default {\n  data: function data() {\n    return {\n      tableData: [],\n      accountid: '',\n      orderCount: 0,\n      pageSize: 10,\n      pageNum: 1\n    };\n  },\n  methods: {\n    indexMethod: function indexMethod(index) {\n      return (this.pageNum - 1) * this.pageSize + index + 1;\n    },\n    getBuyOrder: function () {\n      var _getBuyOrder = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var res;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return this.$http.get(\"http://192.168.50.96:10335/api/v1/data-dealer/tools/orders/0?ontid=did:ont:\".concat(this.accountid, \"&pageNum=\").concat(this.pageNum, \"&pageSize=\").concat(this.pageSize));\n\n              case 3:\n                res = _context.sent;\n                console.log(res);\n\n                if (res.status === 200 && res.data.msg === 'SUCCESS') {\n                  this.tableData = res.data.result.list;\n                  this.orderCount = res.data.result.total;\n                }\n\n                _context.next = 11;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](0);\n                this.tableData = [];\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 8]]);\n      }));\n\n      function getBuyOrder() {\n        return _getBuyOrder.apply(this, arguments);\n      }\n\n      return getBuyOrder;\n    }(),\n    cancelOrder: function () {\n      var _cancelOrder = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(data) {\n        var operation, exchange_id, args, params, result;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                // 取消订单\n                console.log(data); // 构造数据\n\n                operation = 'cancelExchange'; // 构造args\n\n                exchange_id = data.orderId;\n                args = [{\n                  type: 'ByteArray',\n                  value: exchange_id\n                }];\n                params = {\n                  operation: operation,\n                  args: args\n                };\n                _context2.prev = 5;\n                _context2.next = 8;\n                return this.$store.dispatch('dapiInvoke', params);\n\n              case 8:\n                result = _context2.sent;\n                console.log(result);\n\n                if (result && result.transaction) {\n                  this.getBuyOrder();\n                  this.$message({\n                    message: '取消成功！',\n                    type: 'success',\n                    center: true,\n                    duration: 2000\n                  });\n                } else {\n                  this.$message({\n                    message: '取消失败，请重试！',\n                    type: 'error',\n                    center: true,\n                    duration: 2000\n                  });\n                }\n\n                _context2.next = 16;\n                break;\n\n              case 13:\n                _context2.prev = 13;\n                _context2.t0 = _context2[\"catch\"](5);\n                this.$message({\n                  message: '取消失败，请重试！',\n                  type: 'error',\n                  center: true,\n                  duration: 2000\n                });\n\n              case 16:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[5, 13]]);\n      }));\n\n      function cancelOrder(_x) {\n        return _cancelOrder.apply(this, arguments);\n      }\n\n      return cancelOrder;\n    }(),\n    confirmReceipt: function () {\n      var _confirmReceipt = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3(data) {\n        var operation, exchange_id, args, params, result;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                //  确认收货\n                console.log(data); // 构造数据\n\n                operation = 'receiveEncMessage'; // 构造args\n\n                exchange_id = data.orderId;\n                args = [{\n                  type: 'ByteArray',\n                  value: exchange_id\n                }];\n                params = {\n                  operation: operation,\n                  args: args\n                };\n                _context3.prev = 5;\n                _context3.next = 8;\n                return this.$store.dispatch('dapiInvoke', params);\n\n              case 8:\n                result = _context3.sent;\n                console.log(result);\n\n                if (result && result.transaction) {\n                  this.getBuyOrder();\n                  this.$message({\n                    message: '收货成功！',\n                    type: 'success',\n                    center: true,\n                    duration: 2000\n                  });\n                } else {\n                  this.$message({\n                    message: '收货失败，请重试！',\n                    type: 'error',\n                    center: true,\n                    duration: 2000\n                  });\n                }\n\n                _context3.next = 16;\n                break;\n\n              case 13:\n                _context3.prev = 13;\n                _context3.t0 = _context3[\"catch\"](5);\n                this.$message({\n                  message: '收货失败，请重试！',\n                  type: 'error',\n                  center: true,\n                  duration: 2000\n                });\n\n              case 16:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[5, 13]]);\n      }));\n\n      function confirmReceipt(_x2) {\n        return _confirmReceipt.apply(this, arguments);\n      }\n\n      return confirmReceipt;\n    }(),\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.pageNum = val;\n      this.getBuyOrder();\n    },\n    viewInfo: function () {\n      var _viewInfo = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee4(data) {\n        var res;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n                _context4.next = 3;\n                return this.$http.get(\"http://192.168.50.96:10335/api/v1/data-dealer/tools/data?orderId=\".concat(data.orderId, \"&ontid=did:ont:\").concat(this.accountid));\n\n              case 3:\n                res = _context4.sent;\n                console.log('viewInfo', res);\n\n                if (res.status === 200 && res.data.msg === 'SUCCESS') {\n                  this.openMsgBox(res.data.result[0]);\n                } else {\n                  this.$message({\n                    message: '查看失败，请重试！',\n                    type: 'error',\n                    center: true,\n                    duration: 2000\n                  });\n                }\n\n                _context4.next = 11;\n                break;\n\n              case 8:\n                _context4.prev = 8;\n                _context4.t0 = _context4[\"catch\"](0);\n                this.$message({\n                  message: '查看失败，请重试！',\n                  type: 'error',\n                  center: true,\n                  duration: 2000\n                });\n\n              case 11:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[0, 8]]);\n      }));\n\n      function viewInfo(_x3) {\n        return _viewInfo.apply(this, arguments);\n      }\n\n      return viewInfo;\n    }(),\n    openMsgBox: function openMsgBox(msg) {\n      this.$alert(msg, '商品信息', {\n        confirmButtonText: '确定',\n        callback: function callback(action) {}\n      });\n    }\n  },\n  mounted: function () {\n    var _mounted = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee5() {\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return client.api.asset.getAccount();\n\n            case 2:\n              this.accountid = _context5.sent;\n              console.log(this.accountid);\n\n              if (this.accountid) {\n                _context5.next = 6;\n                break;\n              }\n\n              return _context5.abrupt(\"return\");\n\n            case 6:\n              this.getBuyOrder();\n\n            case 7:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, this);\n    }));\n\n    function mounted() {\n      return _mounted.apply(this, arguments);\n    }\n\n    return mounted;\n  }()\n};",{"version":3,"sources":["Buyer.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <el-table border :data=\"tableData\" style=\"width: 100%\">\n      <el-table-column type=\"index\" :index=\"indexMethod\" align=\"center\"></el-table-column>\n      <el-table-column prop=\"dataProvider\" label=\"卖家\" style=\"width: 20%\" align=\"center\"></el-table-column>\n      <el-table-column prop=\"orderId\" label=\"订单号\" width=\"260\" align=\"center\"></el-table-column>\n      <el-table-column label=\"订单状态\" align=\"center\" width=\"180\">\n        <template slot-scope=\"scope\">\n          <el-tag size=\"medium\" v-if=\"scope.row.state === 'boughtOnchain'\">已下单</el-tag>\n          <el-tag\n            size=\"medium\"\n            type=\"success\"\n            v-else-if=\"scope.row.state === 'deliveredOnchain'\"\n          >已发货</el-tag>\n          <el-tag\n            size=\"medium\"\n            type=\"warning\"\n            v-else-if=\"scope.row.state === 'buyerRecvMsgOnchain'\"\n          >已收货</el-tag>\n          <el-tag\n            size=\"medium\"\n            type=\"danger\"\n            v-else-if=\"scope.row.state === 'sellerRecvTokenOnchain'\"\n          >卖家已收钱</el-tag>\n          <el-tag size=\"medium\" type=\"info\" v-else>订单已取消</el-tag>\n        </template>\n      </el-table-column>\n      <el-table-column prop=\"buyDate\" label=\"购买日期\" width=\"180\" align=\"center\"></el-table-column>\n      <el-table-column label=\"操作\" width=\"180\" align=\"center\">\n        <template slot-scope=\"scope\">\n          <el-button\n            size=\"medium\"\n            type=\"success\"\n            v-if=\"scope.row.isRecvMsg === 0 && scope.row.state === 'deliveredOnchain'\"\n            @click=\"confirmReceipt(scope.row)\"\n          >确认收货</el-button>\n          <el-button\n            size=\"medium\"\n            type=\"success\"\n            v-else-if=\"scope.row.isRecvMsg === 0 && scope.row.state === 'sellerRecvTokenOnchain'\"\n            @click=\"confirmReceipt(scope.row)\"\n          >确认收货</el-button>\n          <el-tag size=\"medium\" type=\"info\" v-else-if=\"scope.row.isRecvMsg === 1\">订单已完成</el-tag>\n          <el-tag\n            size=\"medium\"\n            type=\"danger\"\n            v-else-if=\"scope.row.state === 'buyerCancelOnchain'\"\n          >订单已取消</el-tag>\n          <el-button @click=\"cancelOrder(scope.row)\" type=\"danger\" v-else>取消订单</el-button>\n          <el-button\n            style=\"margin-top: 6px;\"\n            @click=\"viewInfo(scope.row)\"\n            type=\"success\"\n            size=\"mini\"\n            v-show=\"scope.row.isRecvMsg === 1\"\n          >查看信息</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <div class=\"paginatio\">\n      <el-pagination\n        @current-change=\"handleCurrentChange\"\n        background\n        layout=\"prev, pager, next\"\n        :total=\"orderCount\"\n        :page-size=\"pageSize\"\n      ></el-pagination>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { client } from 'ontology-dapi'\n\nexport default {\n  data() {\n    return {\n      tableData: [],\n      accountid: '',\n      orderCount: 0,\n      pageSize: 10,\n      pageNum: 1\n    }\n  },\n  methods: {\n    indexMethod(index) {\n      return (this.pageNum - 1) * this.pageSize + index + 1\n    },\n    async getBuyOrder() {\n      try {\n        let res = await this.$http.get(`http://192.168.50.96:10335/api/v1/data-dealer/tools/orders/0?ontid=did:ont:${this.accountid}&pageNum=${this.pageNum}&pageSize=${this.pageSize}`)\n        console.log(res)\n        if (res.status === 200 && res.data.msg === 'SUCCESS') {\n          this.tableData = res.data.result.list\n          this.orderCount = res.data.result.total\n        }\n      } catch (error) {\n        this.tableData = []\n      }\n\n    },\n    async cancelOrder(data) {   // 取消订单\n      console.log(data)\n      // 构造数据\n      let operation = 'cancelExchange'\n\n      // 构造args\n      let exchange_id = data.orderId\n      let args = [\n        {\n          type: 'ByteArray',\n          value: exchange_id\n        }\n      ]\n      let params = {\n        operation,\n        args\n\n      }\n\n      try {\n        const result = await this.$store.dispatch('dapiInvoke', params)\n        console.log(result)\n\n        if (result && result.transaction) {\n          this.getBuyOrder()\n          this.$message({\n            message: '取消成功！',\n            type: 'success',\n            center: true,\n            duration: 2000\n          });\n        } else {\n          this.$message({\n            message: '取消失败，请重试！',\n            type: 'error',\n            center: true,\n            duration: 2000\n          });\n        }\n\n      } catch (error) {\n        this.$message({\n          message: '取消失败，请重试！',\n          type: 'error',\n          center: true,\n          duration: 2000\n        });\n      }\n\n    },\n    async confirmReceipt(data) {   //  确认收货\n      console.log(data)\n      // 构造数据\n      let operation = 'receiveEncMessage'\n      // 构造args\n      let exchange_id = data.orderId\n      let args = [\n        {\n          type: 'ByteArray',\n          value: exchange_id\n        }\n      ]\n      let params = {\n        operation,\n        args\n      }\n\n      try {\n\n        const result = await this.$store.dispatch('dapiInvoke', params)\n        console.log(result)\n        if (result && result.transaction) {\n          this.getBuyOrder()\n          this.$message({\n            message: '收货成功！',\n            type: 'success',\n            center: true,\n            duration: 2000\n          });\n        } else {\n          this.$message({\n            message: '收货失败，请重试！',\n            type: 'error',\n            center: true,\n            duration: 2000\n          });\n        }\n      } catch (error) {\n        this.$message({\n          message: '收货失败，请重试！',\n          type: 'error',\n          center: true,\n          duration: 2000\n        });\n      }\n\n    },\n    handleCurrentChange(val) {\n      this.pageNum = val\n      this.getBuyOrder()\n    },\n    async viewInfo(data) {\n      try {\n        let res = await this.$http.get(`http://192.168.50.96:10335/api/v1/data-dealer/tools/data?orderId=${data.orderId}&ontid=did:ont:${this.accountid}`)\n        console.log('viewInfo', res)\n        if (res.status === 200 && res.data.msg === 'SUCCESS') {\n          this.openMsgBox(res.data.result[0])\n        } else {\n          this.$message({\n            message: '查看失败，请重试！',\n            type: 'error',\n            center: true,\n            duration: 2000\n          })\n        }\n      } catch (error) {\n        this.$message({\n          message: '查看失败，请重试！',\n          type: 'error',\n          center: true,\n          duration: 2000\n        })\n      }\n\n    },\n    openMsgBox(msg) {\n      this.$alert(msg, '商品信息', {\n        confirmButtonText: '确定',\n        callback: action => {\n        }\n      });\n    }\n  },\n  async mounted() {\n    this.accountid = await client.api.asset.getAccount()\n    console.log(this.accountid);\n    if (!this.accountid) {\n      return\n    }\n    this.getBuyOrder()\n  },\n}\n</script>\n\n<style lang='less' scoped>\n.paginatio {\n  margin: 20px auto;\n}\n</style>\n"],"sourceRoot":"src/components"}]}