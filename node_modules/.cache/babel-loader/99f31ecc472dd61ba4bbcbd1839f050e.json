{"remainingRequest":"/Users/ericyang/Desktop/Onchina_item/marketplace-web/node_modules/babel-loader/lib/index.js!/Users/ericyang/Desktop/Onchina_item/marketplace-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/ericyang/Desktop/Onchina_item/marketplace-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ericyang/Desktop/Onchina_item/marketplace-web/src/components/Buyer.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ericyang/Desktop/Onchina_item/marketplace-web/src/components/Buyer.vue","mtime":1557225359902},{"path":"/Users/ericyang/Desktop/Onchina_item/marketplace-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ericyang/Desktop/Onchina_item/marketplace-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/ericyang/Desktop/Onchina_item/marketplace-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ericyang/Desktop/Onchina_item/marketplace-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/ericyang/Desktop/Onchina_item/marketplace-web/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { client } from 'ontology-dapi';\nexport default {\n  data: function data() {\n    return {\n      tableData: [],\n      accountid: ''\n    };\n  },\n  methods: {\n    indexMethod: function indexMethod(index) {\n      return index + 1;\n    },\n    getBuyOrder: function () {\n      var _getBuyOrder = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var res;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return this.$http.get(\"http://192.168.50.96:10335/api/v1/data-dealer/tools/orders/0?ontid=did:ont:\".concat(this.accountid));\n\n              case 3:\n                res = _context.sent;\n                console.log(res);\n\n                if (res.status === 200 && res.data.desc === 'SUCCESS') {\n                  this.tableData = res.data.result;\n                }\n\n                _context.next = 11;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](0);\n                this.tableData = [];\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 8]]);\n      }));\n\n      function getBuyOrder() {\n        return _getBuyOrder.apply(this, arguments);\n      }\n\n      return getBuyOrder;\n    }(),\n    cancelOrder: function cancelOrder(data) {\n      console.log(data);\n    },\n    confirmReceipt: function () {\n      var _confirmReceipt = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(data) {\n        var scriptHash, operation, gasPrice, gasLimit, requireIdentity, exchange_id, args, result;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                console.log(data); // 构造数据\n\n                scriptHash = '472848200412d9a7abbb0ed0bfb568a47745e4ba';\n                operation = 'receiveEncMessage';\n                gasPrice = 500;\n                gasLimit = 30000;\n                requireIdentity = true; // 构造args\n\n                exchange_id = data.order_id;\n                args = [{\n                  type: 'ByteArray',\n                  value: exchange_id\n                }];\n                _context2.next = 10;\n                return client.api.smartContract.invoke({\n                  scriptHash: scriptHash,\n                  operation: operation,\n                  args: args,\n                  gasPrice: gasPrice,\n                  gasLimit: gasLimit,\n                  requireIdentity: requireIdentity\n                });\n\n              case 10:\n                result = _context2.sent;\n                console.log(result);\n\n              case 12:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function confirmReceipt(_x) {\n        return _confirmReceipt.apply(this, arguments);\n      }\n\n      return confirmReceipt;\n    }()\n  },\n  mounted: function () {\n    var _mounted = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee3() {\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return client.api.asset.getAccount();\n\n            case 2:\n              this.accountid = _context3.sent;\n              console.log(this.accountid);\n\n              if (this.accountid) {\n                _context3.next = 6;\n                break;\n              }\n\n              return _context3.abrupt(\"return\");\n\n            case 6:\n              this.getBuyOrder();\n\n            case 7:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, this);\n    }));\n\n    function mounted() {\n      return _mounted.apply(this, arguments);\n    }\n\n    return mounted;\n  }()\n};",{"version":3,"sources":["Buyer.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkDA,SAAA,MAAA,QAAA,eAAA;AAEA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,SAAA,EAAA,EADA;AAEA,MAAA,SAAA,EAAA;AAFA,KAAA;AAIA,GANA;AAOA,EAAA,OAAA,EAAA;AACA,IAAA,WADA,uBACA,KADA,EACA;AACA,aAAA,KAAA,GAAA,CAAA;AACA,KAHA;AAIA,IAAA,WAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAMA,KAAA,KAAA,CAAA,GAAA,sFAAA,KAAA,SAAA,EANA;;AAAA;AAMA,gBAAA,GANA;AAOA,gBAAA,OAAA,CAAA,GAAA,CAAA,GAAA;;AACA,oBAAA,GAAA,CAAA,MAAA,KAAA,GAAA,IAAA,GAAA,CAAA,IAAA,CAAA,IAAA,KAAA,SAAA,EAAA;AACA,uBAAA,SAAA,GAAA,GAAA,CAAA,IAAA,CAAA,MAAA;AACA;;AAVA;AAAA;;AAAA;AAAA;AAAA;AAYA,qBAAA,SAAA,GAAA,EAAA;;AAZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAgBA,IAAA,WAhBA,uBAgBA,IAhBA,EAgBA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,IAAA;AACA,KAlBA;AAmBA,IAAA,cAnBA;AAAA;AAAA;AAAA,gDAmBA,IAnBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoBA,gBAAA,OAAA,CAAA,GAAA,CAAA,IAAA,EApBA,CAqBA;;AACA,gBAAA,UAtBA,GAsBA,0CAtBA;AAuBA,gBAAA,SAvBA,GAuBA,mBAvBA;AAwBA,gBAAA,QAxBA,GAwBA,GAxBA;AAyBA,gBAAA,QAzBA,GAyBA,KAzBA;AA0BA,gBAAA,eA1BA,GA0BA,IA1BA,EA4BA;;AACA,gBAAA,WA7BA,GA6BA,IAAA,CAAA,QA7BA;AA8BA,gBAAA,IA9BA,GA8BA,CACA;AACA,kBAAA,IAAA,EAAA,WADA;AAEA,kBAAA,KAAA,EAAA;AAFA,iBADA,CA9BA;AAAA;AAAA,uBAqCA,MAAA,CAAA,GAAA,CAAA,aAAA,CAAA,MAAA,CAAA;AACA,kBAAA,UAAA,EAAA,UADA;AAEA,kBAAA,SAAA,EAAA,SAFA;AAGA,kBAAA,IAAA,EAAA,IAHA;AAIA,kBAAA,QAAA,EAAA,QAJA;AAKA,kBAAA,QAAA,EAAA,QALA;AAMA,kBAAA,eAAA,EAAA;AANA,iBAAA,CArCA;;AAAA;AAqCA,gBAAA,MArCA;AA6CA,gBAAA,OAAA,CAAA,GAAA,CAAA,MAAA;;AA7CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,GAPA;AAuDA,EAAA,OAvDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAwDA,MAAA,CAAA,GAAA,CAAA,KAAA,CAAA,UAAA,EAxDA;;AAAA;AAwDA,mBAAA,SAxDA;AAyDA,cAAA,OAAA,CAAA,GAAA,CAAA,KAAA,SAAA;;AAzDA,kBA0DA,KAAA,SA1DA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AA6DA,mBAAA,WAAA;;AA7DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,CAAA","sourcesContent":["<template>\n  <div>\n    <el-table border :data=\"tableData\" style=\"width: 100%\">\n      <el-table-column type=\"index\" :index=\"indexMethod\" align=\"center\"></el-table-column>\n      <el-table-column prop=\"data_provider\" label=\"卖家\" style=\"width: 20%\" align=\"center\"></el-table-column>\n      <el-table-column prop=\"order_id\" label=\"订单号\" width=\"260\" align=\"center\"></el-table-column>\n      <el-table-column label=\"订单状态\" align=\"center\" width=\"180\">\n        <template slot-scope=\"scope\">\n          <el-tag size=\"medium\" v-if=\"scope.row.state === 'boughtOnchain'\">已下单</el-tag>\n          <el-tag\n            size=\"medium\"\n            type=\"success\"\n            v-else-if=\"scope.row.state === 'deliveredOnchain'\"\n          >已发货</el-tag>\n          <el-tag\n            size=\"medium\"\n            type=\"warning\"\n            v-else-if=\"scope.row.state === 'buyerRecvMsgOnchain'\"\n          >已收货</el-tag>\n          <el-tag\n            size=\"medium\"\n            type=\"danger\"\n            v-else-if=\"scope.row.state === 'sellerRecvTokenOnchain'\"\n          >卖家已收钱</el-tag>\n          <el-tag size=\"medium\" type=\"info\" v-else>订单已取消</el-tag>\n        </template>\n      </el-table-column>\n      <el-table-column prop=\"buy_date\" label=\"购买日期\" width=\"180\" align=\"center\"></el-table-column>\n      <el-table-column label=\"操作\" width=\"180\" align=\"center\">\n        <template slot-scope=\"scope\">\n          <!-- <el-button size=\"medium\" type=\"success\" @click=\"confirmReceipt(scope.row)\">确认收货</el-button> -->\n          <el-button\n            size=\"medium\"\n            type=\"success\"\n            v-if=\"scope.row.state === 'deliveredOnchain'\"\n            @click=\"confirmReceipt(scope.row)\"\n          >确认收货</el-button>\n          <el-tag\n            size=\"medium\"\n            type=\"danger\"\n            v-else-if=\"scope.row.state === 'sellerRecvTokenOnchain'\"\n          >订单已完成</el-tag>\n          <el-button @click=\"cancelOrder(scope.row)\" type=\"danger\" v-else>取消订单</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n  </div>\n</template>\n\n<script>\nimport { client } from 'ontology-dapi'\n\nexport default {\n  data() {\n    return {\n      tableData: [],\n      accountid: ''\n    }\n  },\n  methods: {\n    indexMethod(index) {\n      return index + 1;\n    },\n    async getBuyOrder() {\n      try {\n        let res = await this.$http.get(`http://192.168.50.96:10335/api/v1/data-dealer/tools/orders/0?ontid=did:ont:${this.accountid}`)\n        console.log(res)\n        if (res.status === 200 && res.data.desc === 'SUCCESS') {\n          this.tableData = res.data.result\n        }\n      } catch (error) {\n        this.tableData = []\n      }\n\n    },\n    cancelOrder(data) {\n      console.log(data)\n    },\n    async confirmReceipt(data) {\n      console.log(data)\n      // 构造数据\n      let scriptHash = '472848200412d9a7abbb0ed0bfb568a47745e4ba'\n      let operation = 'receiveEncMessage'\n      let gasPrice = 500\n      let gasLimit = 30000\n      let requireIdentity = true\n\n      // 构造args\n      let exchange_id = data.order_id\n      let args = [\n        {\n          type: 'ByteArray',\n          value: exchange_id\n        }\n      ]\n\n      const result = await client.api.smartContract.invoke({\n        scriptHash,\n        operation,\n        args,\n        gasPrice,\n        gasLimit,\n        requireIdentity\n      });\n      console.log(result)\n    }\n  },\n  async mounted() {\n    this.accountid = await client.api.asset.getAccount()\n    console.log(this.accountid);\n    if (!this.accountid) {\n      return\n    }\n    this.getBuyOrder()\n  },\n}\n</script>\n\n<style>\n</style>\n"],"sourceRoot":"src/components"}]}